[global_tags]

[agent]
  ## データ収集のインターバル
  interval = "10s"

  ## 間隔時間に合わせる
  ## if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf はバッファしてまとめてoutputsに送信する
  metric_batch_size = 1000

  # 間隔時間のバラツキはなくてよい
  collection_jitter = "0s"

  ## outputsに送信する間隔
  flush_interval = "10s"
  flush_jitter = "0s"

  ## 0sを指定すると、1秒未満の精度なので、10秒間隔は最悪の場合で11秒になる
  ## Valid time units are "ns", "us" (or "µs"), "ms", "s".
  precision = "0s"

  ## os.Hostname()を使う
  hostname = ""

  ## ホスト名を付与
  omit_hostname = false

# Basic inputs for host metrics inside the container
[[inputs.cpu]]
  percpu = false # コンテナ内のCPUメトリクスなので、パーCPUはあまり意味がない
  totalcpu = true


[[outputs.influxdb_v2]]
  urls = ["http://localhost:8086"]
  bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"

##
## 対象装置ごとに[[inputs.snmp]]を追加する
##

[[inputs.snmp]]

  ## 対象装置のIPアドレス
  agents = [ "udp://192.168.254.1:161" ]

  ## リクエストごとのタイムアウト
  timeout = "5s"

  ## SNMPコミュニティ
  community = "public"
    [[inputs.snmp.field]]
      name = "hostname"
      oid = "RFC1213-MIB::sysName.0"
      is_tag = true
    [[inputs.snmp.field]]
      name = "location"
      oid = "RFC1213-MIB::sysLocation.0"
      is_tag = true
    [[inputs.snmp.field]]
      name = "contact"
      oid = "RFC1213-MIB::sysContact.0"
      is_tag = true
    [[inputs.snmp.field]]
      name = "uptime"
      oid = "DISMAN-EVENT-MIB::sysUpTimeInstance"
      is_tag = false
      conversion = "uptime"

  ## インタフェースごとのトラフィック量取得
  [[inputs.snmp.table]]
    name = "interface"
    oid = "IF-MIB::ifXTable"
    inherit_tags = [ "hostname" ]
    [[inputs.snmp.table.field]]
      name = "ifDescr"
      oid = "IF-MIB::ifDescr"
      is_tag = true
    [[inputs.snmp.table.field]]
      name = "ifHCInOctets"
      oid = "IF-MIB::ifHCInOctets"
    [[inputs.snmp.table.field]]
      name = "ifHCOutOctets"
      oid = "IF-MIB::ifHCOutOctets"
